Components, Templates, Interpolation
Property binding, Event binding, ngModel
Directives â€“ ngIf, ngFor, ngClass
Services & Dependency Injection
Routing
Reactive Forms
HTTPClient
State Management 

Practice Project
Blog App / TODO / CRUD with mock APIs


react -> 
React Hook Form + Yup
NextAuth.js

âœ… React Query or SWR
Server state management; better than useEffect+fetch
âœ… Debounce, Throttle, Search with API
For performance in search/filter UI
âœ… Dynamic Imports, Lazy Loading
Performance optimization
âœ… Server Actions in Next 14
SSR ke sath safe data manipulation
âœ… Pagination, Filtering, Sorting (server-side)
Real-world blog/product listing ke liye
âœ… Redis / Caching
Speed and SEO optimization in full-stack apps
âœ… WebSockets / Socket.IO
Live features (chat/notification) ke liye

You, 9:11â€¯AM
 1. Basic Setup

Express App, dotenv, nodemon, cors, helmet, morgan


Folder Structure: routes/, controllers/, models/, middleware/



âœ… 2. CRUD Operations

RESTful APIs: GET, POST, PUT, DELETE


Use Mongoose for MongoDB models (schemas + validations)



âœ… 3. Authentication & Authorization

âœ… JWT Auth (Login, Register, Middleware to protect routes)


âœ… Password Hashing with bcryptjs


âœ… Role-based access (admin/user) for protected routes



âœ… 4. Advanced Features

âœ… File Upload (e.g., Multer for image uploads)


âœ… Pagination, Search, Filtering with MongoDB


âœ… Email sending (using nodemailer)


âœ… Rate limiting, IP blocking (express-rate-limit)


âœ… Redis for caching GET requests (optional but good for performance)



âœ… 5. Middlewares

Error Handling Middleware


Auth Middleware (JWT verification)


Logging Middleware



âœ… 6. Security

âœ… Sanitize input (express-mongo-sanitize)


âœ… Prevent XSS attacks (xss-clean)


âœ… Enable Helmet for securing headers


âœ… Enable CORS properly for frontend integration



âœ… 7. Deployment Ready

âœ… Environment-based config (process.env)


âœ… Connect to MongoDB Atlas (remote DB)


âœ… Proper .env management and config.js structure


âœ… Use PM2 or similar for server process management


âœ… Use Render, Railway, or VPS for backend hosting

You, 9:13â€¯AM
1. CSR vs SSR vs SSG vs ISR


useEffect se data fetch (CSR)


getServerSideProps (SSR)


getStaticProps + getStaticPaths (SSG)


ISR (Incremental Static Regeneration)




ðŸ”¹ 2. Routing in Next.js


App Router (Next.js 13/14 ka naya system)


app/ directory structure


page.jsx, layout.jsx, loading.jsx, error.jsx




ðŸ”¹ 3. Dynamic Routing


[slug], [id], [...slug] ka use


generateStaticParams (SSG me dynamic pages ke liye)




ðŸ”¹ 4. API Routes


app/api/route.js (Next.js 13+)


POST request handle karna


Database (MongoDB) se connect karna




ðŸ”¹ 5. Authentication


next-auth se Google/Login system


Session handling (SessionProvider, useSession())


Middleware se protected routes




ðŸ”¹ 6. Forms & Validations


react-hook-form + yup


Controlled vs uncontrolled inputs


File/image upload with preview




ðŸ”¹ 7. State Management


useState, useEffect, useContext


Redux Toolkit (agar use kiya ho toh)


Local storage/session storage me data store




ðŸ”¹ 8. Optimizations


Lazy loading (next/image, dynamic imports)


Image optimization using <Image />


SEO optimizations (metadata, canonical URLs, etc.)




ðŸ”¹ 9. Deployment


Vercel me deploy kaise karte ho


.env config, CORS issues


Server actions (Next.js 14+)




ðŸ”¹ 10. Bonus Concepts


TailwindCSS ya shadcn/ui


Server-side caching (like Redis)


Pagination (Server side vs Client side)


Skeleton loader while fetching data
